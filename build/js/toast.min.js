!function(t){t.toast=function(e){var a="toast-"+(t(".toast").length+1),s="",i="",o="",n="text-muted",l="",d=e.title||"Notice!",r=e.subtitle||"",c=e.content||"",m=e.type||"info",h=e.delay||-1,u=e.img,g=e.pause_on_hover||!1,p=!1,v="",w=e.position||"top-right";switch(m){case"info":i="bg-info",o="text-white",n="text-white",l="text-white";break;case"success":i="bg-success",o="text-white",n="text-white",l="text-white";break;case"warning":case"warn":i="bg-warning",o="text-white",n="text-white",l="text-white";break;case"error":case"danger":i="bg-danger",o="text-white",n="text-white",l="text-white"}!1!==g?(v='data-autohide="false"',g='data-hide-timestamp="'+(Math.floor(Date.now()/1e3)+h/1e3)+'"'):v=-1===h?'data-autohide="false"':'data-delay="'+h+'"';if(s='<div id="'+a+'" class="toast" role="alert" aria-live="assertive" aria-atomic="true" '+v+" "+g+">",s+='<div class="toast-header '+i+" "+o+'">',void 0!==u&&(s+='<img src="'+u.src+'" class="'+(u.class||"")+' mr-2" alt="'+(u.alt||"Image")+'" '+(void 0!==u.title?'data-toggle="tooltip" title="'+u.title+'"':"")+">"),s+='<strong class="mr-auto">'+d+"</strong>",s+='<small class="'+n+'">'+r+"</small>",s+='<button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">',s+='<span aria-hidden="true" class="'+l+'">&times;</span>',s+="</button>",s+="</div>",""!==c&&(s+='<div class="toast-body">',s+=c,s+="</div>"),s+="</div>",document.getElementsByClassName(`toast-container ${w}`).length||t("body").prepend(`<div class="toast-container ${w}" aria-live="polite" aria-atomic="true"></div>`),!document.getElementsByClassName(`toast-container ${w}`)[0].hasChildNodes()){let t=document.createElement("div");t.className="toast-wrapper",document.getElementsByClassName(`toast-container ${w}`)[0].append(t)}let b=document.createElement("div");b.innerHTML=s;const f=document.getElementsByClassName(`toast-container ${w}`)[0].firstChild.appendChild(b);t(f.firstChild).toast("show"),!1!==g&&(setTimeout(function(){p||t("#"+a).toast("hide")},h),t(document).on("mouseover","#"+a,function(){p=!0}),t(document).on("mouseleave","#"+a,function(){var e=Math.floor(Date.now()/1e3),a=parseInt(t(this).data("hide-timestamp"));p=!1,e>=a&&t(this).toast("hide")}))}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,